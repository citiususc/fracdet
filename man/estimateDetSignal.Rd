% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fracdet.R
\name{estimateDetSignal}
\alias{estimateDetSignal}
\title{Estimate deterministic signal}
\usage{
estimateDetSignal(x, estimate_from, df = 5, nsim_bootstrap = 1000,
  amplitude_fraction = 0.01, signal_amplitude = NULL, gk_method = 6,
  rel_tol = 1e-07, nsubintv = 100000L, aggr_strategy = TRUE)
}
\arguments{
\item{x}{A \code{Fracdet} object.}

\item{estimate_from}{Numeric vector specifying which resolution levels of the
wavelet transform should be used to estimate the deterministic signal.}

\item{df}{Degrees of freedom of the Student's t used to model the deterministic
wavelet coefficients with large energy. Default: {df = 5}.}

\item{nsim_bootstrap}{Number of bootstrap replicates used to estimate the
regression errors in each resolution level. Default: \code{nsim_boostrap = 1000}.}

\item{amplitude_fraction}{Fraction of the deterministic signal amplitude used
to compute a soft bound of what should be considered a negligible
deterministic wavelet coefficient. Default: \code{amplitude_fraction = 0.01}.}

\item{signal_amplitude}{An estimate of the deterministic signal amplitude. If
not provided, a proper estimate is computed.}

\item{gk_method}{An integer code specifying the integration rule to be used
in the computations. \code{gk_method} should be an integer between 1 and 6,
corresponding to the 15, 21, 31, 41, 51 and 61 point Gauss-Kronrod rules.
Default: \code{gk_method = 6}. See details.}

\item{rel_tol}{Desired relative error used in the numerical integration.
Defautl \code{rel_tol = 1e-7}. See details.}

\item{nsubintv}{Maximum number of subintervals to be used in the numerical
integration. Default: \code{nsubintv = 1e5}. See details.}

\item{aggr_strategy}{Logical value. If \code{TRUE}, an aggresive strategy
for selecting the priors is used, leading to more aggresive estimations
of the deterministic signal. Default: \code{aggr_strategy = TRUE}.}
}
\value{
A \code{wd} object representing the wavelet transform of the
deterministic signal estimation. To obtain the final estimate of \eqn{x},
the \code{wr} function (\code{\link[wavethresh]{wr}}) may be used.
}
\description{
\code{estimateDetSignal} estimates the deterministic signal based on a
fractal-deterministic model that consists on a  linear superposition of a
fractional brownian motion (fBm) \eqn{B} and a deterministic band-limited
signal \eqn{x} (\eqn{S = x + B}). The model is represented (in wavelet
domain) through a \code{Fracdet} object which also contains estimates of the
fBm parameters (see \code{\link{Fracdet}}). To obtain the estimate of the
deterministic component, all the knowledge we may have
about the signals is exploited using a bayesian framework. This knowledge
consist on:
\itemize{
\item The estimates of the fBm parameters (which completely characterize the
statistical properties of the fBm signal).
\item The well-known statistical properties of the fBm signals in wavelet
domain.
\item The deviations from the theoretical wavelet coefficients' variance
(as a function of the resolution level) allow the estimation of the energy
distribution accross the resolution levels of the deterministic signal.
}
Using all this information, a bayesian model of the distribution
of the deterministic and stochastic wavelet coefficients is built. The wavelet
transform of the deterministic signal is estimated by
calculating the decision rule that minimizes the posterior expected value of
a squared loss function.
}
\details{
The decision rule involves the computation of several integrals. The numerical
integrals were computed using an adaptive integration scheme from the
\href{https://www.gnu.org/software/gsl/}{GSL - GNU Scientific Library}. For
further details about the numerical integration method, the interested reader
 is referred to the
\href{https://www.gnu.org/software/gsl/manual/html_node/QAG-adaptive-integration.html}{GSL documentation}.
}
\examples{
\dontrun{
# set parameters for the example
set.seed(3)
nlevels = 14
n = 2 ^ nlevels
xlim = c(200, 400)
H = 0.3
# simulate a simple fbm + sinusal signal
x = 1.25 * cospi(2 * 1:n / 10)
s = fbmSim(n = n, H = H) + x
# compute the wavelet transform and the wavelet coefficients' variances
ws = wd(s, bc = "symmetric")
vpr = WaveletVar(ws)
# do you note the increase in variance in level 11?
plot(vpr, xlim = c(4, nlevels - 1),
     ylim = range(vpr[5:nlevels]))
# estimate the fBm parameters avoiding levels 11 and 12 (with deterministic
# contributions). Level 12 is also avoid as a precaution
model = estimatefBmPars(vpr, use_resolution_levels = c(5:10, 13))
# Create a Fracdet object...
fd = Fracdet(ws, model)
# ... and check the fit
print(coef(fd))
# plot the experimental and the fitted wavelet's variances
plot(getWaveletVar(fd))
points(getFittedWaveletVar(fd),
       col = 2,
       pch = 2)
# Estimate the deterministic signal (this may take a while) taking
# into account the deviations in level 11, 12. The estimateDetSignal uses
# this information using a Bayesian modelling approach
wx = estimateDetSignal(fd, estimate_from = 11:12)
x_est = wr(wx)
# compare the original signal and the estimation
old_par = par(mfrow = c(2,1))
plot(s, xlim = xlim,
     ylim = range(s[xlim[[1]]:xlim[[2]]]),
     type = "l")
lines(x, lty = 2, col = 2)
legend("topright", lty = 1:2, col = 1:2,
       legend = c("S", "x"), bty = "n")
plot(x, type = "l", xlim = xlim,
     ylim = range(x) * c(1, 2))
lines(x_est, col = 2, lty = 2)
legend("topright", lty = 1:2, col = 1:2,
       legend = c("x", "x-estimate"), bty = "n")
par(old_par)
}
}
\seealso{
\code{\link[wavethresh]{wd}}, \code{\link[wavethresh]{wr}},
\code{\link{Fracdet}}.
}

